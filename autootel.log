2023-03-20T09:53:43.820Z	warn	filesystemscraper/factory.go:71	No `root_path` config set when running in docker environment, will report container filesystem stats. See https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/hostmetricsreceiver#collecting-host-metrics-from-inside-a-container-linux-only	{"kind": "receiver", "name": "hostmetrics", "pipeline": "metrics"}
2023-03-20T09:53:43.936Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "extension", "name": "health_check", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.024Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "otlp", "pipeline": "metrics", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.024Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "otlp", "pipeline": "metrics", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.024Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "signalfx", "pipeline": "metrics", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.027Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "jaeger", "pipeline": "traces", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.030Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "jaeger", "pipeline": "traces", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:44.037Z	warn	internal/warning.go:51	Using the 0.0.0.0 address exposes this server to every network interface, which may facilitate Denial of Service attacks	{"kind": "receiver", "name": "zipkin", "pipeline": "traces", "documentation": "https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks"}
2023-03-20T09:53:45.039Z	error	prometheusexporter/prometheus.go:139	Could not get prometheus metrics	{"kind": "receiver", "name": "receiver_creator", "pipeline": "metrics", "name": "smartagent/coredns/receiver_creator{endpoint=\"10.42.0.14\"}/k8s_observer/e3853a96-ca30-44cd-9301-c9d930cf169b", "monitorID": "smartagentcorednsreceiver_creatorendpoint1042014k8s_observere3853a96ca3044cd9301c9d930cf169b", "error": "Get \"http://10.42.0.14:9153/metrics\": dial tcp 10.42.0.14:9153: connect: connection refused", "monitorType": "coredns"}
2023-03-20T09:53:52.724Z	warn	internal/transaction.go:121	Failed to scrape Prometheus endpoint	{"kind": "receiver", "name": "receiver_creator", "pipeline": "metrics", "name": "prometheus_simple//receiver_creator{endpoint=\"10.42.0.21:9090\"}/k8s_observer/6f43563d-39cf-499e-a83d-0d4c810d609f", "scrape_timestamp": 1679306032723, "target_labels": "{__name__=\"up\", instance=\"10.42.0.21:9090\", job=\"prometheus_simple/10.42.0.21:9090\"}"}
2023-03-20T09:53:55.068Z	info	exporterhelper/queued_retry.go:426	Exporting failed. Will retry the request after interval.	{"kind": "exporter", "data_type": "metrics", "name": "signalfx", "error": "Post \"https://ingest.us1.signalfx.com/v2/datapoint\": net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)", "interval": "5.22847211s"}
